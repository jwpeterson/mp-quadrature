Solving non-square system, m=36 (rows), n=14 (unknowns), lda=36 (lda=max(m,n)).
Solving non-square system, m=36 (rows), n=14 (unknowns), lda=36 (lda=max(m,n)).
Warning: Weights are not scaled by volume, they should add up to ref. elt. volume!
static FLOAT QUAD_2D_P10_wts[] = {
    Dup3(4.5408995191376790047643297550014267e-02L),
    Dup21(1.8362978878233352358503035945683300e-02L),
    Dup21(2.2660529717763967391302822369298659e-02L),
    Dup111(3.6378958422710054302157588309680344e-02L),
    Dup111(1.4163621265528742418368530791049552e-02L),
    Dup111(4.7108334818664117299637354834434138e-03L)
};
static FLOAT QUAD_2D_P10_pts[Length(QUAD_2D_P10_wts) * 3] = {
    Perm3(3.3333333333333333333333333333333333e-01L),
    Perm21(4.8557763338365737736750753220812615e-01L),
    Perm21(1.0948157548503705479545863134052284e-01L),
    Perm111(5.5035294182099909507816172659300821e-01L,3.0793983876412095016515502293063162e-01L),
    Perm111(7.2832390459741092000873505358107866e-01L,2.4667256063990269391727646541117681e-01L),
    Perm111(9.2365593358750027664630697761508843e-01L,6.6803251012200265773540212762024737e-02L)
};
QUAD QUAD_2D_P10_ = {
    "2D P10",			/* name */
    2,				/* dim */
    10,				/* order */
    Length(QUAD_2D_P10_wts),	/* npoints = 25 */
    QUAD_2D_P10_pts,		/* points */
    QUAD_2D_P10_wts,		/* weights */
    -1				/* id */
};
