To build the library, type

./configure
make

You may optionally specify the locations of the GMP and MPFR headers
and libs on your system using the following options to configure:
--with-gmp-include=/path/to/gmp/include
--with-gmp-lib=/path/to/gmp/lib
--with-mpfr-include=/path/to/mpfr/include
--with-mpfr-lib=/path/to/mpfr/lib

There are several driver programs (drivers/*.C) which make use of
the library which gets built in lib/.

.) drivers/print_gauss.C
  Computes Legendre polynomial roots and weights for 1D Gaussian
  quadrature rules.  To compute values for the rule with 10 points, run:

  ./drivers/print_gauss 10

.) drivers/jacobi_rule.C
  Computes and prints Jacobi quadrature rules for alpha=1, beta=0,
  rescaled to the interval [0,1], for rules with 2 through 22 points
  (i.e. through order 43).

.) drivers/conical_product_2D.C
  Computes and prints conical product rule points and weights for
  rule having n^2 points.  (Quadrature rule for triangles).  Run with e.g.

  ./drivers/conical_product_rule_2D 3	

  to get points and weights for a rule having 3*3=9 points.
  The sum of weights is also printed for verification, it should
  be 0.5, the area of the reference triangle.

.) drivers/conical_product_3D.C
  Computes and prints conical product rule points and weights for
  rule having n^3 points.  (Quadrature rule for tets).  Run with e.g.

  ./drivers/conical_product_rule_3D 3	

  to get points and weights for a rule having 3*3*3=27 points.
  The sum of weights is also printed for verification, it should
  be 0.1666..., the volume of the reference tetrahedron.
  

There are also some more-or-less OK Matlab/Octave implementations in
the matlab/ directory, though these are strictly double-precision
implementations.  The Gauss Matlab implementation in particular is
very simplistic and should not be relied on for accurate results at
high orders!



Notes on obtaining supporting software:

.) GNU GMP
   The Rudix project provides a pre-built DMG for GMP:
   http://code.google.com/p/rudix/downloads/detail?name=gmp-4.3.1-2.dmg&can=1&q=gmp
   
   Files are installed in /usr/local/include and /usr/local/lib by default 
   (and I could not see a way to change this).

   Also, this is apparently an i386 library, and this causes problems with
   building MPFR from source later if you are on Snow Leopard, which is a
   64-bit OS....

   To build GMP from source:
   CXX=g++ CC=gcc ./configure --prefix=/location/to/install/gmp --enable-cxx
   make
   make check (this worked just fine for me on Snow Leopard)
   make install

.) GNU MPFR (http://www.mpfr.org/)
   A C library for multiple-precision floating-point computations with correct rounding.
   A cursory search did not reveal any prebuilt DMG's for this library.
   I grabbed source code from http://www.mpfr.org/mpfr-current/mpfr-3.0.1.tar.bz2
   
   CXX=g++ CC=gcc ./configure --with-gmp-include=/location/to/install/gmp/include \
                              --with-gmp-lib=/location/to/install/gmp/lib \
			      --prefix=/location/to/install/mpfr
   make
   make check
   make install

			      