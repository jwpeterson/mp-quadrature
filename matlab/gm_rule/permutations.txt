================================================================================
Results for s=4
================================================================================

The last column is what we got after letting the code run all weekend!
Note that the only difference is that a single 1/945 and 81/1925 are
flipped!

1.4710455076283324e-15    5.8286708792820718e-16    4.7184478546569153e-16    3.6082248300317588e-16     1.3877787807814457e-16
-78125/798336             -78125/798336             -78125/798336             -78125/798336              -78125/798336
-78125/798336             -78125/798336             -78125/798336             -78125/798336              -78125/798336
-78125/798336             -78125/798336             -78125/798336             -78125/798336              -78125/798336
-78125/798336             -78125/798336             -78125/798336             -78125/798336              -78125/798336
-78125/798336             -78125/798336             -78125/798336             -78125/798336              -78125/798336
-78125/798336             -78125/798336             -78125/798336             -78125/798336              -78125/798336
-78125/798336             -78125/798336             -78125/798336             -78125/798336              -78125/798336
-78125/798336             -78125/798336             -78125/798336             -78125/798336              -78125/798336
-78125/798336             -78125/798336             -78125/798336             -78125/798336              -78125/798336
-78125/798336             -78125/798336             -78125/798336             -78125/798336              -78125/798336
-78125/798336             -78125/798336             -78125/798336             -78125/798336              -78125/798336
-78125/798336             -78125/798336             -78125/798336             -78125/798336              -78125/798336
-78125/798336             -78125/798336             -78125/798336             -78125/798336              -78125/798336
-78125/798336             -78125/798336             -78125/798336             -78125/798336              -78125/798336
-78125/798336             -78125/798336             -78125/798336             -78125/798336              -78125/798336
-78125/798336             -78125/798336             -78125/798336             -78125/798336              -78125/798336
-78125/798336             -78125/798336             -78125/798336             -78125/798336              -78125/798336
-78125/798336             -78125/798336             -78125/798336             -78125/798336              -78125/798336
-78125/798336             -78125/798336             -78125/798336             -78125/798336              -78125/798336
-78125/798336             -78125/798336             -78125/798336             -78125/798336              -78125/798336
-81/4480                  -81/4480                  -81/4480                  -81/4480                   -81/4480
-81/4480                  -81/4480                  -81/4480                  -81/4480                   -81/4480
-81/4480                  -81/4480                  -81/4480                  -81/4480                   -81/4480
-81/4480                  -81/4480                  -81/4480                  -81/4480                   -81/4480
1/945                     1/945                     1/945                     1/945                      81/1925
81/1925                   81/1925                   81/1925                   81/1925                    1/945
81/1925                   81/1925                   81/1925                   81/1925                    81/1925
81/1925                   81/1925                   81/1925                   81/1925                    81/1925
81/1925                   81/1925                   81/1925                   81/1925                    81/1925
81/1925                   81/1925                   81/1925                   81/1925                    81/1925
81/1925                   81/1925                   81/1925                   81/1925                    81/1925
81/1925                   81/1925                   81/1925                   81/1925                    81/1925
81/1925                   81/1925                   81/1925                   81/1925                    81/1925
81/1925                   81/1925                   81/1925                   1024/14175                 1024/14175
81/1925                   81/1925                   81/1925                   1024/14175                 1024/14175
81/1925                   81/1925                   1024/14175                1024/14175                 1024/14175
81/1925                   81/1925                   1024/14175                1024/14175                 1024/14175
81/1925                   1024/14175                1024/14175                1024/14175                 1024/14175
81/1925                   1024/14175                1024/14175                1024/14175                 1024/14175
81/1925                   1024/14175                1024/14175                1024/14175                 1024/14175
81/1925                   1024/14175                1024/14175                1024/14175                 1024/14175
81/1925                   1024/14175                1024/14175                1024/14175                 1024/14175
81/1925                   1024/14175                1024/14175                81/1925                    81/1925
81/1925                   1024/14175                81/1925                   81/1925                    81/1925
81/1925                   81/1925                   81/1925                   81/1925                    81/1925
81/1925                   81/1925                   81/1925                   81/1925                    81/1925
81/1925                   81/1925                   81/1925                   81/1925                    81/1925
81/1925                   81/1925                   81/1925                   81/1925                    81/1925
81/1925                   81/1925                   81/1925                   81/1925                    81/1925
81/1925                   1024/14175                81/1925                   81/1925                    81/1925
81/1925                   81/1925                   1024/14175                81/1925                    81/1925
81/1925                   1024/14175                81/1925                   81/1925                    81/1925
81/1925                   81/1925                   1024/14175                81/1925                    81/1925
81/1925                   1024/14175                81/1925                   1024/14175                 1024/14175
81/1925                   81/1925                   81/1925                   81/1925                    81/1925
81/1925                   81/1925                   81/1925                   81/1925                    81/1925
81/1925                   81/1925                   81/1925                   81/1925                    81/1925
81/1925                   81/1925                   81/1925                   81/1925                    81/1925
81/1925                   81/1925                   81/1925                   81/1925                    81/1925
1024/14175                81/1925                   81/1925                   81/1925                    81/1925
81/1925                   81/1925                   81/1925                   81/1925                    81/1925
1024/14175                81/1925                   81/1925                   81/1925                    81/1925
1024/14175                81/1925                   81/1925                   81/1925                    81/1925
1024/14175                81/1925                   81/1925                   81/1925                    81/1925
1024/14175                81/1925                   81/1925                   81/1925                    81/1925
1024/14175                81/1925                   81/1925                   81/1925                    81/1925
1024/14175                81/1925                   81/1925                   81/1925                    81/1925
1024/14175                81/1925                   81/1925                   81/1925                    81/1925
1024/14175                81/1925                   81/1925                   81/1925                    81/1925
1024/14175                81/1925                   81/1925                   81/1925                    81/1925

Generally speaking, the 1024/14175 entries are moved backward in the
ordering... but that may just be an artifact of how
std::next_permutation works?


================================================================================
Results for s=2
================================================================================

Smallest max quadrature errors found for s=2 rule:

$ ./drivers/gm_rule --rule-index 2 --binary-digits 53 --unsorted  --n-random-trials=1000 --random-seed=4
Index 2 rule has degree 5, and 15 point(s).
Smallest quadrature error: 9.2518585385429721973595675739493e-18
_points.resize(15);
_weights.resize(15);

_points[ 0](0) = 5.L/8.L;  _points[ 0](1) = 1.L/8.L;  _points[ 0](2) = 1.L/8.L;  _weights[ 0] =  16.L/315.L;
_points[ 1](0) = 1.L/8.L;  _points[ 1](1) = 3.L/8.L;  _points[ 1](2) = 1.L/8.L;  _weights[ 1] =  16.L/315.L;
_points[ 2](0) = 1.L/6.L;  _points[ 2](1) = 1.L/6.L;  _points[ 2](2) = 1.L/6.L;  _weights[ 2] = -27.L/280.L;
_points[ 3](0) = 1.L/8.L;  _points[ 3](1) = 5.L/8.L;  _points[ 3](2) = 1.L/8.L;  _weights[ 3] =  16.L/315.L;
_points[ 4](0) = 1.L/8.L;  _points[ 4](1) = 1.L/8.L;  _points[ 4](2) = 3.L/8.L;  _weights[ 4] =  16.L/315.L;
_points[ 5](0) = 1.L/8.L;  _points[ 5](1) = 3.L/8.L;  _points[ 5](2) = 3.L/8.L;  _weights[ 5] =  16.L/315.L;
_points[ 6](0) = 1.L/2.L;  _points[ 6](1) = 1.L/6.L;  _points[ 6](2) = 1.L/6.L;  _weights[ 6] = -27.L/280.L;
_points[ 7](0) = 1.L/8.L;  _points[ 7](1) = 1.L/8.L;  _points[ 7](2) = 5.L/8.L;  _weights[ 7] =  16.L/315.L;
_points[ 8](0) = 1.L/6.L;  _points[ 8](1) = 1.L/6.L;  _points[ 8](2) = 1.L/2.L;  _weights[ 8] = -27.L/280.L;
_points[ 9](0) = 3.L/8.L;  _points[ 9](1) = 3.L/8.L;  _points[ 9](2) = 1.L/8.L;  _weights[ 9] =  16.L/315.L;
_points[10](0) = 3.L/8.L;  _points[10](1) = 1.L/8.L;  _points[10](2) = 3.L/8.L;  _weights[10] =  16.L/315.L;
_points[11](0) = 1.L/8.L;  _points[11](1) = 1.L/8.L;  _points[11](2) = 1.L/8.L;  _weights[11] =  16.L/315.L;
_points[12](0) = 1.L/6.L;  _points[12](1) = 1.L/2.L;  _points[12](2) = 1.L/6.L;  _weights[12] = -27.L/280.L;
_points[13](0) = 3.L/8.L;  _points[13](1) = 1.L/8.L;  _points[13](2) = 1.L/8.L;  _weights[13] =  16.L/315.L;
_points[14](0) = 1.L/4.L;  _points[14](1) = 1.L/4.L;  _points[14](2) = 1.L/4.L;  _weights[14] =    2.L/45.L;


Between trials 9M and 10M (this is almost the same as the other one, but with one 2/45 and 16/315 term reversed.
This is encouraging, because it shows that "nearby" (i.e. differ by one swap) solutions are at least related.

./drivers/gm_rule --rule-index 2 --binary-digits 53 --unsorted  --n-random-trials=2147483648 --random-seed=5
New best quadrature error found, avg_error = 6.3294969505642606139185584140393e-19
_points.resize(15);
_weights.resize(15);

_points[ 0](0) = 1.L/8.L;  _points[ 0](1) = 5.L/8.L;  _points[ 0](2) = 1.L/8.L;  _weights[ 0] =  16.L/315.L;
_points[ 1](0) = 3.L/8.L;  _points[ 1](1) = 1.L/8.L;  _points[ 1](2) = 1.L/8.L;  _weights[ 1] =  16.L/315.L;
_points[ 2](0) = 1.L/8.L;  _points[ 2](1) = 1.L/8.L;  _points[ 2](2) = 3.L/8.L;  _weights[ 2] =  16.L/315.L;
_points[ 3](0) = 1.L/6.L;  _points[ 3](1) = 1.L/6.L;  _points[ 3](2) = 1.L/2.L;  _weights[ 3] = -27.L/280.L;
_points[ 4](0) = 3.L/8.L;  _points[ 4](1) = 3.L/8.L;  _points[ 4](2) = 1.L/8.L;  _weights[ 4] =  16.L/315.L;
_points[ 5](0) = 1.L/8.L;  _points[ 5](1) = 3.L/8.L;  _points[ 5](2) = 3.L/8.L;  _weights[ 5] =  16.L/315.L;
_points[ 6](0) = 1.L/2.L;  _points[ 6](1) = 1.L/6.L;  _points[ 6](2) = 1.L/6.L;  _weights[ 6] = -27.L/280.L;
_points[ 7](0) = 1.L/6.L;  _points[ 7](1) = 1.L/2.L;  _points[ 7](2) = 1.L/6.L;  _weights[ 7] = -27.L/280.L;
_points[ 8](0) = 1.L/8.L;  _points[ 8](1) = 1.L/8.L;  _points[ 8](2) = 5.L/8.L;  _weights[ 8] =  16.L/315.L;
_points[ 9](0) = 1.L/8.L;  _points[ 9](1) = 3.L/8.L;  _points[ 9](2) = 1.L/8.L;  _weights[ 9] =  16.L/315.L;
_points[10](0) = 1.L/6.L;  _points[10](1) = 1.L/6.L;  _points[10](2) = 1.L/6.L;  _weights[10] = -27.L/280.L;
_points[11](0) = 5.L/8.L;  _points[11](1) = 1.L/8.L;  _points[11](2) = 1.L/8.L;  _weights[11] =  16.L/315.L;
_points[12](0) = 1.L/4.L;  _points[12](1) = 1.L/4.L;  _points[12](2) = 1.L/4.L;  _weights[12] =    2.L/45.L;
_points[13](0) = 1.L/8.L;  _points[13](1) = 1.L/8.L;  _points[13](2) = 1.L/8.L;  _weights[13] =  16.L/315.L;
_points[14](0) = 3.L/8.L;  _points[14](1) = 1.L/8.L;  _points[14](2) = 3.L/8.L;  _weights[14] =  16.L/315.L;



On my laptop, with 10k optimization trials, a new optimum ordering was found!  It is fairly similar to
the other ordering found, except for the 2/45 term...

./drivers/gm_rule --rule-index=2 --binary-digits=53 --optimize --random-seed=12
max_error = 9.2518585385429721973595675739493e-18
avg_error = 6.0200983162267904341121210008536e-19
_points.resize(15);
_weights.resize(15);

_points[ 0](0) = 1.L/8.L;  _points[ 0](1) = 1.L/8.L;  _points[ 0](2) = 5.L/8.L;  _weights[ 0] =  16.L/315.L;
_points[ 1](0) = 3.L/8.L;  _points[ 1](1) = 1.L/8.L;  _points[ 1](2) = 1.L/8.L;  _weights[ 1] =  16.L/315.L;
_points[ 2](0) = 1.L/8.L;  _points[ 2](1) = 3.L/8.L;  _points[ 2](2) = 1.L/8.L;  _weights[ 2] =  16.L/315.L;
_points[ 3](0) = 1.L/2.L;  _points[ 3](1) = 1.L/6.L;  _points[ 3](2) = 1.L/6.L;  _weights[ 3] = -27.L/280.L;
_points[ 4](0) = 1.L/8.L;  _points[ 4](1) = 3.L/8.L;  _points[ 4](2) = 3.L/8.L;  _weights[ 4] =  16.L/315.L;
_points[ 5](0) = 3.L/8.L;  _points[ 5](1) = 1.L/8.L;  _points[ 5](2) = 3.L/8.L;  _weights[ 5] =  16.L/315.L;
_points[ 6](0) = 1.L/6.L;  _points[ 6](1) = 1.L/6.L;  _points[ 6](2) = 1.L/6.L;  _weights[ 6] = -27.L/280.L;
_points[ 7](0) = 1.L/6.L;  _points[ 7](1) = 1.L/6.L;  _points[ 7](2) = 1.L/2.L;  _weights[ 7] = -27.L/280.L;
_points[ 8](0) = 1.L/8.L;  _points[ 8](1) = 1.L/8.L;  _points[ 8](2) = 1.L/8.L;  _weights[ 8] =  16.L/315.L;
_points[ 9](0) = 1.L/4.L;  _points[ 9](1) = 1.L/4.L;  _points[ 9](2) = 1.L/4.L;  _weights[ 9] =    2.L/45.L;
_points[10](0) = 5.L/8.L;  _points[10](1) = 1.L/8.L;  _points[10](2) = 1.L/8.L;  _weights[10] =  16.L/315.L;
_points[11](0) = 1.L/6.L;  _points[11](1) = 1.L/2.L;  _points[11](2) = 1.L/6.L;  _weights[11] = -27.L/280.L;
_points[12](0) = 1.L/8.L;  _points[12](1) = 1.L/8.L;  _points[12](2) = 3.L/8.L;  _weights[12] =  16.L/315.L;
_points[13](0) = 1.L/8.L;  _points[13](1) = 5.L/8.L;  _points[13](2) = 1.L/8.L;  _weights[13] =  16.L/315.L;
_points[14](0) = 3.L/8.L;  _points[14](1) = 3.L/8.L;  _points[14](2) = 1.L/8.L;  _weights[14] =  16.L/315.L;
5 6 7 10 4 3 13 12 9 14 0 11 8 2 1

New optimal rule found:
max_error = 9.2518585385429721973595675739493e-18
avg_error = 6.0170217017960326777930899157235e-19
_points.resize(15);
_weights.resize(15);

_points[ 0](0) = 1.L/8.L;  _points[ 0](1) = 3.L/8.L;  _points[ 0](2) = 1.L/8.L;  _weights[ 0] =  16.L/315.L;
_points[ 1](0) = 1.L/8.L;  _points[ 1](1) = 1.L/8.L;  _points[ 1](2) = 5.L/8.L;  _weights[ 1] =  16.L/315.L;
_points[ 2](0) = 3.L/8.L;  _points[ 2](1) = 1.L/8.L;  _points[ 2](2) = 1.L/8.L;  _weights[ 2] =  16.L/315.L;
_points[ 3](0) = 1.L/6.L;  _points[ 3](1) = 1.L/2.L;  _points[ 3](2) = 1.L/6.L;  _weights[ 3] = -27.L/280.L;
_points[ 4](0) = 3.L/8.L;  _points[ 4](1) = 1.L/8.L;  _points[ 4](2) = 3.L/8.L;  _weights[ 4] =  16.L/315.L;
_points[ 5](0) = 1.L/8.L;  _points[ 5](1) = 3.L/8.L;  _points[ 5](2) = 3.L/8.L;  _weights[ 5] =  16.L/315.L;
_points[ 6](0) = 1.L/6.L;  _points[ 6](1) = 1.L/6.L;  _points[ 6](2) = 1.L/6.L;  _weights[ 6] = -27.L/280.L;
_points[ 7](0) = 1.L/6.L;  _points[ 7](1) = 1.L/6.L;  _points[ 7](2) = 1.L/2.L;  _weights[ 7] = -27.L/280.L;
_points[ 8](0) = 1.L/8.L;  _points[ 8](1) = 1.L/8.L;  _points[ 8](2) = 1.L/8.L;  _weights[ 8] =  16.L/315.L;
_points[ 9](0) = 1.L/4.L;  _points[ 9](1) = 1.L/4.L;  _points[ 9](2) = 1.L/4.L;  _weights[ 9] =    2.L/45.L;
_points[10](0) = 1.L/8.L;  _points[10](1) = 5.L/8.L;  _points[10](2) = 1.L/8.L;  _weights[10] =  16.L/315.L;
_points[11](0) = 1.L/2.L;  _points[11](1) = 1.L/6.L;  _points[11](2) = 1.L/6.L;  _weights[11] = -27.L/280.L;
_points[12](0) = 1.L/8.L;  _points[12](1) = 1.L/8.L;  _points[12](2) = 3.L/8.L;  _weights[12] =  16.L/315.L;
_points[13](0) = 5.L/8.L;  _points[13](1) = 1.L/8.L;  _points[13](2) = 1.L/8.L;  _weights[13] =  16.L/315.L;
_points[14](0) = 3.L/8.L;  _points[14](1) = 3.L/8.L;  _points[14](2) = 1.L/8.L;  _weights[14] =  16.L/315.L;
7 5 6 11 3 4 13 12 9 14 2 10 8 0 1



================================================================================
Results for s=3
================================================================================

$ ./drivers/gm_rule --rule-index=3 --binary-digits=53 --optimize=10000 --random-seed=12
Using random seed 12
Index 3 rule has degree 7, and 35 point(s).

New optimal rule found:
max_error = 9.2518585385429721973595675739493e-18
avg_error = 5.6809675581798204035739821041588e-19
_points.resize(35);
_weights.resize(35);

_points[ 0](0) =  1.L/6.L;  _points[ 0](1) =  1.L/6.L;  _points[ 0](2) =  1.L/2.L;  _weights[ 0] =   243.L/4480.L;
_points[ 1](0) =  5.L/8.L;  _points[ 1](1) =  1.L/8.L;  _points[ 1](2) =  1.L/8.L;  _weights[ 1] =  -256.L/2835.L;
_points[ 2](0) = 3.L/10.L;  _points[ 2](1) =  1.L/2.L;  _points[ 2](2) = 1.L/10.L;  _weights[ 2] = 3125.L/72576.L;
_points[ 3](0) = 3.L/10.L;  _points[ 3](1) = 3.L/10.L;  _points[ 3](2) = 3.L/10.L;  _weights[ 3] = 3125.L/72576.L;
_points[ 4](0) = 3.L/10.L;  _points[ 4](1) = 1.L/10.L;  _points[ 4](2) = 1.L/10.L;  _weights[ 4] = 3125.L/72576.L;
_points[ 5](0) = 3.L/10.L;  _points[ 5](1) = 3.L/10.L;  _points[ 5](2) = 1.L/10.L;  _weights[ 5] = 3125.L/72576.L;
_points[ 6](0) =  1.L/2.L;  _points[ 6](1) =  1.L/6.L;  _points[ 6](2) =  1.L/6.L;  _weights[ 6] =   243.L/4480.L;
_points[ 7](0) =  1.L/2.L;  _points[ 7](1) = 1.L/10.L;  _points[ 7](2) = 3.L/10.L;  _weights[ 7] = 3125.L/72576.L;
_points[ 8](0) = 7.L/10.L;  _points[ 8](1) = 1.L/10.L;  _points[ 8](2) = 1.L/10.L;  _weights[ 8] = 3125.L/72576.L;
_points[ 9](0) = 1.L/10.L;  _points[ 9](1) =  1.L/2.L;  _points[ 9](2) = 1.L/10.L;  _weights[ 9] = 3125.L/72576.L;
_points[10](0) =  1.L/6.L;  _points[10](1) =  1.L/6.L;  _points[10](2) =  1.L/6.L;  _weights[10] =   243.L/4480.L;
_points[11](0) = 1.L/10.L;  _points[11](1) = 3.L/10.L;  _points[11](2) = 1.L/10.L;  _weights[11] = 3125.L/72576.L;
_points[12](0) = 1.L/10.L;  _points[12](1) = 7.L/10.L;  _points[12](2) = 1.L/10.L;  _weights[12] = 3125.L/72576.L;
_points[13](0) = 1.L/10.L;  _points[13](1) = 1.L/10.L;  _points[13](2) = 7.L/10.L;  _weights[13] = 3125.L/72576.L;
_points[14](0) = 1.L/10.L;  _points[14](1) = 3.L/10.L;  _points[14](2) =  1.L/2.L;  _weights[14] = 3125.L/72576.L;
_points[15](0) = 1.L/10.L;  _points[15](1) = 1.L/10.L;  _points[15](2) = 1.L/10.L;  _weights[15] = 3125.L/72576.L;
_points[16](0) =  1.L/8.L;  _points[16](1) =  5.L/8.L;  _points[16](2) =  1.L/8.L;  _weights[16] =  -256.L/2835.L;
_points[17](0) =  1.L/2.L;  _points[17](1) = 3.L/10.L;  _points[17](2) = 1.L/10.L;  _weights[17] = 3125.L/72576.L;
_points[18](0) = 3.L/10.L;  _points[18](1) = 1.L/10.L;  _points[18](2) =  1.L/2.L;  _weights[18] = 3125.L/72576.L;
_points[19](0) =  1.L/6.L;  _points[19](1) =  1.L/2.L;  _points[19](2) =  1.L/6.L;  _weights[19] =   243.L/4480.L;
_points[20](0) =  1.L/8.L;  _points[20](1) =  1.L/8.L;  _points[20](2) =  3.L/8.L;  _weights[20] =  -256.L/2835.L;
_points[21](0) =  1.L/8.L;  _points[21](1) =  3.L/8.L;  _points[21](2) =  3.L/8.L;  _weights[21] =  -256.L/2835.L;
_points[22](0) =  1.L/8.L;  _points[22](1) =  1.L/8.L;  _points[22](2) =  1.L/8.L;  _weights[22] =  -256.L/2835.L;
_points[23](0) =  1.L/8.L;  _points[23](1) =  1.L/8.L;  _points[23](2) =  5.L/8.L;  _weights[23] =  -256.L/2835.L;
_points[24](0) =  3.L/8.L;  _points[24](1) =  3.L/8.L;  _points[24](2) =  1.L/8.L;  _weights[24] =  -256.L/2835.L;
_points[25](0) =  1.L/8.L;  _points[25](1) =  3.L/8.L;  _points[25](2) =  1.L/8.L;  _weights[25] =  -256.L/2835.L;
_points[26](0) =  3.L/8.L;  _points[26](1) =  1.L/8.L;  _points[26](2) =  1.L/8.L;  _weights[26] =  -256.L/2835.L;
_points[27](0) =  1.L/2.L;  _points[27](1) = 1.L/10.L;  _points[27](2) = 1.L/10.L;  _weights[27] = 3125.L/72576.L;
_points[28](0) = 1.L/10.L;  _points[28](1) = 1.L/10.L;  _points[28](2) = 3.L/10.L;  _weights[28] = 3125.L/72576.L;
_points[29](0) = 1.L/10.L;  _points[29](1) =  1.L/2.L;  _points[29](2) = 3.L/10.L;  _weights[29] = 3125.L/72576.L;
_points[30](0) =  3.L/8.L;  _points[30](1) =  1.L/8.L;  _points[30](2) =  3.L/8.L;  _weights[30] =  -256.L/2835.L;
_points[31](0) = 1.L/10.L;  _points[31](1) = 3.L/10.L;  _points[31](2) = 3.L/10.L;  _weights[31] = 3125.L/72576.L;
_points[32](0) = 1.L/10.L;  _points[32](1) = 1.L/10.L;  _points[32](2) =  1.L/2.L;  _weights[32] = 3125.L/72576.L;
_points[33](0) =  1.L/4.L;  _points[33](1) =  1.L/4.L;  _points[33](2) =  1.L/4.L;  _weights[33] =     -8.L/945.L;
_points[34](0) = 3.L/10.L;  _points[34](1) = 1.L/10.L;  _points[34](2) = 3.L/10.L;  _weights[34] = 3125.L/72576.L;
32 20 2 5 16 11 30 4 0 12 33 17 3 9 8 19 22 1 7 31 28 24 29 25 21 27 26 10 18 6 23 14 15 34 13



================================================================================
Results for s=1
================================================================================

$ ./drivers/gm_rule --rule-index=1 --binary-digits=53 --optimize=10000 --random-seed=12
Using random seed 12
Index 1 rule has degree 3, and 5 point(s).

New optimal rule found:
max_error = 9.2518585385429721973595675739493e-18
avg_error = 1.8784334109964544386786626887547e-18
_points.resize(5);
_weights.resize(5);

_points[0](0) = 1.L/6.L;  _points[0](1) = 1.L/6.L;  _points[0](2) = 1.L/2.L;  _weights[0] =  3.L/40.L;
_points[1](0) = 1.L/6.L;  _points[1](1) = 1.L/6.L;  _points[1](2) = 1.L/6.L;  _weights[1] =  3.L/40.L;
_points[2](0) = 1.L/4.L;  _points[2](1) = 1.L/4.L;  _points[2](2) = 1.L/4.L;  _weights[2] = -2.L/15.L;
_points[3](0) = 1.L/2.L;  _points[3](1) = 1.L/6.L;  _points[3](2) = 1.L/6.L;  _weights[3] =  3.L/40.L;
_points[4](0) = 1.L/6.L;  _points[4](1) = 1.L/2.L;  _points[4](2) = 1.L/6.L;  _weights[4] =  3.L/40.L;
2 3 4 0 1
